1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "s3-metrics-adapter.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "s3-metrics-adapter.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "s3-metrics-adapter.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "s3-metrics-adapter.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8087/metrics to view metrics"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8087:$CONTAINER_PORT
{{- end }}

2. Check the status of your deployment:
   kubectl get pods -l app.kubernetes.io/name={{ include "s3-metrics-adapter.name" . }} -n {{ .Release.Namespace }}

3. View application logs:
   kubectl logs -l app.kubernetes.io/name={{ include "s3-metrics-adapter.name" . }} -n {{ .Release.Namespace }}

4. Monitor metrics:
   kubectl port-forward svc/{{ include "s3-metrics-adapter.fullname" . }} 8087:8087 -n {{ .Release.Namespace }}
   curl http://localhost:8087/metrics

{{- if .Values.serviceMonitor.enabled }}
5. ServiceMonitor has been created for Prometheus Operator.
   Check Prometheus targets to verify scraping is working:
   - Access your Prometheus UI
   - Go to Status -> Targets
   - Look for "{{ include "s3-metrics-adapter.fullname" . }}" target
{{- else }}
{{- if .Values.service.annotations }}
{{- if index .Values.service.annotations "prometheus.io/scrape" }}
5. Service annotations have been configured for external Prometheus scraping.
   Ensure your Prometheus configuration includes Kubernetes service discovery.
{{- else }}
5. Monitoring is not configured. To enable monitoring:
   
   For Prometheus Operator:
     helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --set serviceMonitor.enabled=true --reuse-values
   
   For external Prometheus:
     helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --set service.annotations.'prometheus\.io/scrape'=true --reuse-values
{{- end }}
{{- else }}
5. Monitoring is not configured. To enable monitoring:
   
   For Prometheus Operator:
     helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --set serviceMonitor.enabled=true --reuse-values
   
   For external Prometheus:
     helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --set service.annotations.'prometheus\.io/scrape'=true --reuse-values
{{- end }}
{{- end }}

6. AWS Credentials:
{{- if .Values.serviceAccount.annotations }}
{{- if index .Values.serviceAccount.annotations "eks.amazonaws.com/role-arn" }}
   ✅ Using EKS IRSA (recommended for EKS)
{{- end }}
{{- end }}
{{- if .Values.awsCredentials.existingSecret.name }}
   ✅ Using existing secret: {{ .Values.awsCredentials.existingSecret.name }}
{{- else if .Values.awsCredentials.create }}
   ⚠️  Using credentials from Helm values (not recommended for production)
{{- else }}
   ℹ️  Using EC2 instance profile or environment variables
{{- end }}

7. Configuration:
{{- if .Values.config.sqs.queues }}
   SQS Queues: {{ len .Values.config.sqs.queues }} configured
{{- range .Values.config.sqs.queues }}
   - {{ . }}
{{- end }}
{{- else }}
   ⚠️  No SQS queues configured. Update values.yaml with your queue URLs.
{{- end }}